/*
 * OBADA API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.1
 * Contact: techops@obada.io
 * Generated by: https://github.com/openapitools/openapi-generator.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using OpenAPIDateConverter = Obada.Client.Client.OpenAPIDateConverter;

namespace Obada.Client.Model
{
    /// <summary>
    /// New Obit request payload.
    /// </summary>
    [DataContract]
    public partial class ObitHistory :  IEquatable<ObitHistory>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="ObitHistory" /> class.
        /// </summary>
        /// <param name="obitDid">OBADA decentralized identifier (max length Rohi?).</param>
        /// <param name="_event">History event.</param>
        /// <param name="oldValues">oldValues.</param>
        /// <param name="newValues">newValues.</param>
        /// <param name="createdAt">createdAt.</param>
        /// <param name="updatedAt">updatedAt.</param>
        public ObitHistory(string obitDid = default(string), string _event = default(string), Object oldValues = default(Object), Object newValues = default(Object), DateTime createdAt = default(DateTime), DateTime updatedAt = default(DateTime))
        {
            this.ObitDid = obitDid;
            this.Event = _event;
            this.OldValues = oldValues;
            this.NewValues = newValues;
            this.CreatedAt = createdAt;
            this.UpdatedAt = updatedAt;
        }

        /// <summary>
        /// OBADA decentralized identifier (max length Rohi?)
        /// </summary>
        /// <value>OBADA decentralized identifier (max length Rohi?)</value>
        [DataMember(Name="obit_did", EmitDefaultValue=false)]
        public string ObitDid { get; set; }

        /// <summary>
        /// History event
        /// </summary>
        /// <value>History event</value>
        [DataMember(Name="event", EmitDefaultValue=false)]
        public string Event { get; set; }

        /// <summary>
        /// Gets or Sets OldValues
        /// </summary>
        [DataMember(Name="old_values", EmitDefaultValue=false)]
        public Object OldValues { get; set; }

        /// <summary>
        /// Gets or Sets NewValues
        /// </summary>
        [DataMember(Name="new_values", EmitDefaultValue=false)]
        public Object NewValues { get; set; }

        /// <summary>
        /// Gets or Sets CreatedAt
        /// </summary>
        [DataMember(Name="created_at", EmitDefaultValue=false)]
        public DateTime CreatedAt { get; set; }

        /// <summary>
        /// Gets or Sets UpdatedAt
        /// </summary>
        [DataMember(Name="updated_at", EmitDefaultValue=false)]
        public DateTime UpdatedAt { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class ObitHistory {\n");
            sb.Append("  ObitDid: ").Append(ObitDid).Append("\n");
            sb.Append("  Event: ").Append(Event).Append("\n");
            sb.Append("  OldValues: ").Append(OldValues).Append("\n");
            sb.Append("  NewValues: ").Append(NewValues).Append("\n");
            sb.Append("  CreatedAt: ").Append(CreatedAt).Append("\n");
            sb.Append("  UpdatedAt: ").Append(UpdatedAt).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }

        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return Newtonsoft.Json.JsonConvert.SerializeObject(this, Newtonsoft.Json.Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as ObitHistory);
        }

        /// <summary>
        /// Returns true if ObitHistory instances are equal
        /// </summary>
        /// <param name="input">Instance of ObitHistory to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(ObitHistory input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.ObitDid == input.ObitDid ||
                    (this.ObitDid != null &&
                    this.ObitDid.Equals(input.ObitDid))
                ) && 
                (
                    this.Event == input.Event ||
                    (this.Event != null &&
                    this.Event.Equals(input.Event))
                ) && 
                (
                    this.OldValues == input.OldValues ||
                    (this.OldValues != null &&
                    this.OldValues.Equals(input.OldValues))
                ) && 
                (
                    this.NewValues == input.NewValues ||
                    (this.NewValues != null &&
                    this.NewValues.Equals(input.NewValues))
                ) && 
                (
                    this.CreatedAt == input.CreatedAt ||
                    (this.CreatedAt != null &&
                    this.CreatedAt.Equals(input.CreatedAt))
                ) && 
                (
                    this.UpdatedAt == input.UpdatedAt ||
                    (this.UpdatedAt != null &&
                    this.UpdatedAt.Equals(input.UpdatedAt))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.ObitDid != null)
                    hashCode = hashCode * 59 + this.ObitDid.GetHashCode();
                if (this.Event != null)
                    hashCode = hashCode * 59 + this.Event.GetHashCode();
                if (this.OldValues != null)
                    hashCode = hashCode * 59 + this.OldValues.GetHashCode();
                if (this.NewValues != null)
                    hashCode = hashCode * 59 + this.NewValues.GetHashCode();
                if (this.CreatedAt != null)
                    hashCode = hashCode * 59 + this.CreatedAt.GetHashCode();
                if (this.UpdatedAt != null)
                    hashCode = hashCode * 59 + this.UpdatedAt.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            // ObitDid (string) maxLength
            if(this.ObitDid != null && this.ObitDid.Length > 256)
            {
                yield return new System.ComponentModel.DataAnnotations.ValidationResult("Invalid value for ObitDid, length must be less than 256.", new [] { "ObitDid" });
            }

 
            yield break;
        }
    }

}
